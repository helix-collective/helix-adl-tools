name: Build and test
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Setup Stack
        uses: timbod7/setup-stack@61acd0e

      - name: Clone project
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn dependencies
        uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache haskell dependencies
        uses: actions/cache@v1
        with:
          path: ~/.stack
          key: ${{ runner.os }}-${{ hashFiles('haskell/stack.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - name: Build core adl and run tests
        run: "cd haskell && stack build --fast adl-compiler && stack test --fast --no-terminal adl-compiler"

      - name: Build hx-adl haskell
        run: "cd haskell && stack build --fast helix-adl-tools"

      - name: Build hx-adl typescript
        run: "cd typescript/hx-adl && rm -rf build && yarn && yarn build"
